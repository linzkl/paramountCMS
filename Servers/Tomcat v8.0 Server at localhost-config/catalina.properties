# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# List of comma-separated packages that start with or equal this string
# will cause a security exception to be thrown when
# passed to checkPackageAccess unless the
# corresponding RuntimePermission ("accessClassInPackage."+package) has
# been granted.
package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat.
#
# List of comma-separated packages that start with or equal this string
# will cause a security exception to be thrown when
# passed to checkPackageDefinition unless the
# corresponding RuntimePermission ("defineClassInPackage."+package) has
# been granted.
#
# by default, no packages are restricted for definition, and none of
# the class loaders supplied with the JDK call checkPackageDefinition.
#
package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,\
org.apache.jasper.,org.apache.naming.,org.apache.tomcat.

#
#
# List of comma-separated paths defining the contents of the "common"
# classloader. Prefixes should be used to define what is the repository type.
# Path may be relative to the CATALINA_HOME or CATALINA_BASE path or absolute.
# If left as blank,the JVM system loader will be used as Catalina's "common"
# loader.
# Examples:
#     "foo": Add this folder as a class repository
#     "foo/*.jar": Add all the JARs of the specified folder as class
#                  repositories
#     "foo/bar.jar": Add bar.jar as a class repository
#
# Note: Values are enclosed in double quotes ("...") in case either the
#       ${catalina.base} path or the ${catalina.home} path contains a comma.
#       Because double quotes are used for quoting, the double quote character
#       may not appear in a path.
common.loader="${catalina.base}/lib","${catalina.base}/lib/*.jar","${catalina.home}/lib","${catalina.home}/lib/*.jar"

#
# List of comma-separated paths defining the contents of the "server"
# classloader. Prefixes should be used to define what is the repository type.
# Path may be relative to the CATALINA_HOME or CATALINA_BASE path or absolute.
# If left as blank, the "common" loader will be used as Catalina's "server"
# loader.
# Examples:
#     "foo": Add this folder as a class repository
#     "foo/*.jar": Add all the JARs of the specified folder as class
#                  repositories
#     "foo/bar.jar": Add bar.jar as a class repository
#
# Note: Values may be enclosed in double quotes ("...") in case either the
#       ${catalina.base} path or the ${catalina.home} path contains a comma.
#       Because double quotes are used for quoting, the double quote character
#       may not appear in a path.
server.loader=

#
# List of comma-separated paths defining the contents of the "shared"
# classloader. Prefixes should be used to define what is the repository type.
# Path may be relative to the CATALINA_BASE path or absolute. If left as blank,
# the "common" loader will be used as Catalina's "shared" loader.
# Examples:
#     "foo": Add this folder as a class repository
#     "foo/*.jar": Add all the JARs of the specified folder as class
#                  repositories
#     "foo/bar.jar": Add bar.jar as a class repository
# Please note that for single jars, e.g. bar.jar, you need the URL form
# starting with file:.
#
# Note: Values may be enclosed in double quotes ("...") in case either the
#       ${catalina.base} path or the ${catalina.home} path contains a comma.
#       Because double quotes are used for quoting, the double quote character
#       may not appear in a path.
shared.loader=

# Default list of JAR files that should not be scanned using the JarScanner
# functionality. This is typically used to scan JARs for configuration
# information. JARs that do not contain such information may be excluded from
# the scan to speed up the scanning process. This is the default list. JARs on
# this list are excluded from all scans. The list must be a comma separated list
# of JAR file names.
# The list of JARs to skip may be over-ridden at a Context level for individual
# scan types by configuring a JarScanner with a nested JarScanFilter.
# The JARs listed below include:
# - Tomcat Bootstrap JARs
# - Tomcat API JARs
# - Catalina JARs
# - Jasper JARs
# - Tomcat JARs
# - Common non-Tomcat JARs
# - Test JARs (JUnit, Cobertura and dependencies)
tomcat.util.scan.StandardJarScanFilter.jarsToSkip=\
bootstrap.jar,commons-daemon.jar,tomcat-juli.jar,\
annotations-api.jar,el-api.jar,jsp-api.jar,servlet-api.jar,websocket-api.jar,\
catalina.jar,catalina-ant.jar,catalina-ha.jar,catalina-storeconfig.jar,\
catalina-tribes.jar,\
jasper.jar,jasper-el.jar,ecj-*.jar,\
tomcat-api.jar,tomcat-util.jar,tomcat-util-scan.jar,tomcat-coyote.jar,\
tomcat-dbcp.jar,tomcat-jni.jar,tomcat-spdy.jar,tomcat-websocket.jar,\
tomcat-i18n-en.jar,tomcat-i18n-es.jar,tomcat-i18n-fr.jar,tomcat-i18n-ja.jar,\
tomcat-juli-adapters.jar,catalina-jmx-remote.jar,catalina-ws.jar,\
tomcat-jdbc.jar,\
tools.jar,\
commons-beanutils*.jar,commons-codec*.jar,commons-collections*.jar,\
commons-dbcp*.jar,commons-digester*.jar,commons-fileupload*.jar,\
commons-httpclient*.jar,commons-io*.jar,commons-lang*.jar,commons-logging*.jar,\
commons-math*.jar,commons-pool*.jar,\
jstl.jar,taglibs-standard-spec-*.jar,\
geronimo-spec-jaxrpc*.jar,wsdl4j*.jar,\
ant.jar,ant-junit*.jar,aspectj*.jar,jmx.jar,h2*.jar,hibernate*.jar,httpclient*.jar,\
jmx-tools.jar,jta*.jar,log4j*.jar,mail*.jar,slf4j*.jar,\
xercesImpl.jar,xmlParserAPIs.jar,xml-apis.jar,\
junit.jar,junit-*.jar,ant-launcher.jar,\
cobertura-*.jar,asm-*.jar,dom4j-*.jar,icu4j-*.jar,jaxen-*.jar,jdom-*.jar,\
jetty-*.jar,oro-*.jar,servlet-api-*.jar,tagsoup-*.jar,xmlParserAPIs-*.jar,\
xom-*.jar

# Default list of JAR files that should be scanned that overrides the default
# jarsToSkip list above. This is typically used to include a specific JAR that
# has been excluded by a broad file name pattern in the jarsToSkip list.
# The list of JARs to scan may be over-ridden at a Context level for individual
# scan types by configuring a JarScanner with a nested JarScanFilter.
tomcat.util.scan.StandardJarScanFilter.jarsToScan=log4j-core*.jar,log4j-taglib*.jar

# String cache configuration.
tomcat.util.buf.StringCache.byte.enabled=true
#tomcat.util.buf.StringCache.char.enabled=true
#tomcat.util.buf.StringCache.trainThreshold=500000
#tomcat.util.buf.StringCache.cacheSize=5000

########################################################
# OpenSource UPF
########################################################

########################################################
## JDBC Dev DB
upf.DB.userName=DEPF01_APP
upf.DB.password=T1lhX1LF+vvoY5gctr9d8Q==


## JDBC data source info
JDBC.generic.dataSource=javax.sql.DataSource
JDBC.generic.dataSource.xa=javax.sql.XADataSource

## JDBC epfPreferenceDataSource
JDBC.epfPreferenceDataSource.userName=DEPF01_APP
JDBC.epfPreferenceDataSource.password=T1lhX1LF+vvoY5gctr9d8Q==}
JDBC.epfPreferenceDataSource.name=jdbc/epfPreferenceDataSource
JDBC.epfPreferenceDataSource.driverClassName=oracle.jdbc.OracleDriver
JDBC.epfPreferenceDataSource.factory=com.capitalone.upf.openupf.tomcat.secure.EncryptedDataSourceFactory
JDBC.epfPreferenceDataSource.type=javax.sql.DataSource
JDBC.epfPreferenceDataSource.auth=Container
JDBC.epfPreferenceDataSource.url=jdbc:oracle:thin:@depf.kdc.capitalone.com:1540:depf
JDBC.epfPreferenceDataSource.initialSize=1
JDBC.epfPreferenceDataSource.maxActive=5
JDBC.epfPreferenceDataSource.minIdle=1
JDBC.epfPreferenceDataSource.validationInterval=30000
JDBC.epfPreferenceDataSource.testOnBorrow=true
JDBC.epfPreferenceDataSource.validationQuery=SELECT 1 FROM DUAL
JDBC.epfPreferenceDataSource.testWhileIdle=true
JDBC.epfPreferenceDataSource.timeBetweenEvictionRunsMillis=15000
JDBC.epfPreferenceDataSource.minEvictableIdleTimeMillis=120000



## JDBC epfAuditDataSource
JDBC.epfAuditDataSource.userName=DEPF01_APP
JDBC.epfAuditDataSource.password=T1lhX1LF+vvoY5gctr9d8Q==}
JDBC.epfAuditDataSource.name=jdbc/epfAuditDataSource
JDBC.epfAuditDataSource.driverClassName=oracle.jdbc.driver.OracleDriver
JDBC.epfAuditDataSource.factory=com.capitalone.upf.openupf.tomcat.secure.EncryptedDataSourceFactory
JDBC.epfAuditDataSource.type=javax.sql.DataSource
JDBC.epfAuditDataSource.auth=Container
JDBC.epfAuditDataSource.url=jdbc:oracle:thin:@depf.kdc.capitalone.com:1540:depf
JDBC.epfAuditDataSource.initialSize=1
JDBC.epfAuditDataSource.maxActive=5
JDBC.epfAuditDataSource.minIdle=1
JDBC.epfAuditDataSource.validationInterval=30000
JDBC.epfAuditDataSource.testOnBorrow=true
JDBC.epfAuditDataSource.validationQuery=SELECT 1 FROM DUAL
JDBC.epfAuditDataSource.testWhileIdle=true
JDBC.epfAuditDataSource.timeBetweenEvictionRunsMillis=15000
JDBC.epfAuditDataSource.minEvictableIdleTimeMillis=120000

## JDBC upfFeatureToggleDataSource
JDBC.upfFeatureToggleDataSource.userName=DTOGGLE_APP
JDBC.upfFeatureToggleDataSource.password=JxTze14cVDsO/0JFYf4O5w==
JDBC.upfFeatureToggleDataSource.name=java/upfFeatureToggle
JDBC.upfFeatureToggleDataSource.driverClassName=oracle.jdbc.driver.OracleDriver
JDBC.upfFeatureToggleDataSource.factory=com.capitalone.upf.openupf.tomcat.secure.EncryptedDataSourceFactory
JDBC.upfFeatureToggleDataSource.type=javax.sql.DataSource
JDBC.upfFeatureToggleDataSource.auth=Container
JDBC.upfFeatureToggleDataSource.url=jdbc:oracle:thin:@mkd29qn.kdc.capitalone.com:1525:Q0007SX
JDBC.upfFeatureToggleDataSource.initialSize=1
JDBC.upfFeatureToggleDataSource.maxActive=5
JDBC.upfFeatureToggleDataSource.minIdle=1
JDBC.upfFeatureToggleDataSource.validationInterval=30000
JDBC.upfFeatureToggleDataSource.testOnBorrow=true
JDBC.upfFeatureToggleDataSource.validationQuery=SELECT 1 FROM DUAL
JDBC.upfFeatureToggleDataSource.testWhileIdle=true
JDBC.upfFeatureToggleDataSource.timeBetweenEvictionRunsMillis=15000
JDBC.upfFeatureToggleDataSource.minEvictableIdleTimeMillis=120000


########################################################
## Environment Variables
ENV.suppress.audit.logging.name=suppress.audit.logging
ENV.suppress.audit.logging.type=java.lang.Boolean
ENV.suppress.audit.logging.value=false

ENV.audit.metadata.delimiter.name=audit.metadata.delimiter
ENV.audit.metadata.delimiter.type=java.lang.String
ENV.audit.metadata.delimiter.value=|


## JMS Audit JMS Connection Factory
JMS.epfAuditConnectionFactory.factoryName=jms/upf.jms.connectionFactory
JMS.epfAuditConnectionFactory.auth=Container
JMS.epfAuditConnectionFactory.brokerName=ActiveMQBroker
JMS.epfAuditConnectionFactory.brokerURL=tcp://localhost:61616
JMS.epfAuditConnectionFactory.factory=org.apache.activemq.jndi.JNDIReferenceFactory
JMS.epfAuditConnectionFactory.type=org.apache.activemq.ActiveMQConnectionFactory
JMS.epfAuditConnectionFactory.typeInterface=javax.jms.ConnectionFactory

##Audit Queue
JMS.epfAuditQueue.auth=Container
JMS.epfAuditQueue.name=jms/epf.audit.queue
JMS.epfAuditQueue.physicalName=epf.audit.queue
JMS.epfAuditQueue.factory=org.apache.activemq.jndi.JNDIReferenceFactory
JMS.epfAuditQueue.type=org.apache.activemq.command.ActiveMQQueue

##Audit Error Queue
JMS.epfAuditErrorQueue.auth=Container
JMS.epfAuditErrorQueue.name=jms/epf.audit.error.queue
JMS.epfAuditErrorQueue.physicalName=epf.audit.error.queue
JMS.epfAuditErrorQueue.factory=org.apache.activemq.jndi.JNDIReferenceFactory
JMS.epfAuditErrorQueue.type=org.apache.activemq.command.ActiveMQQueue
